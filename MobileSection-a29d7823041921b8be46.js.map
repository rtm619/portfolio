{"version":3,"sources":["webpack:///./src/components/Card/styles/FrameworkCard.twstyle.js","webpack:///./src/components/SVG/Triangle.js","webpack:///./src/components/Card/FrameworkCard.js","webpack:///./src/components/AnimatedCardsSection/styles/MobileSection.twstyle.js","webpack:///./src/components/AnimatedCardsSection/MobileSection.js"],"names":["Triangle","className","style","xmlns","viewBox","points","defaultProps","FrameworkCard","title","shortDescription","image","link","useState","isVisible","setVisible","domRef","useRef","useEffect","window","innerWidth","process","currentRef","current","observer","IntersectionObserver","entries","entry","isIntersecting","observe","unobserve","ref","classnames","styles","Image","src","file","url","alt","Typography","component","Button","target","rel","href","text","default","MobileSection","props","state","triggerHook","render","this","variant","content","componentStyle","map","item","key","duration","progress","from","opacity","yPercent","scale","to","Component"],"mappings":"kLAAe,EACJ,+EADI,EAEN,8CAFM,EAGG,sDAHH,EAIN,4DAJM,EAKK,6EALL,EAMP,6EANO,EAOH,+EAPG,EAQH,2D,wBCLNA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OACf,yBAAKD,UAAWA,EAAWC,MAAOA,EAAOC,MAAM,6BAA6BC,QAAQ,eAClF,6BAASC,OAAO,4BASpBL,EAASM,aAAe,CACtBL,UAAW,oCACXC,MAAO,IAGMF,QC0CAO,IAnDO,SAAC,GAEhB,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,iBAAkBC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,KAC5B,EAC4BC,oBAAS,GAAlCC,EADH,KACcC,EADd,KAEEC,EAASC,mBAajB,OAZEC,qBAAU,WACR,GAAIC,OAAOC,YAAcC,MAAsC,CAC7D,IAAMC,EAAaN,EAAOO,QACpBC,EAAW,IAAIC,sBAAqB,SAACC,GACzC,IAAMC,EAAQD,EAAQ,GACtBX,EAAWY,EAAMC,mBAGnB,OADAJ,EAASK,QAAQP,GACV,kBAAME,EAASM,UAAUR,IAElC,OAAO,kBAAM,QACZ,IAEH,yBAAKS,IAAKf,EAAQd,UAAW8B,YAAWC,EAAgBnB,EAAY,mBAAqB,KACtFH,GACC,kBAACuB,EAAA,QAAD,CAAOhC,UAAW+B,EAAcE,IAAKxB,EAAMyB,MAAQzB,EAAMyB,KAAKC,IAAKC,IAAK3B,EAAMF,QAEhF,yBAAKP,UAAW+B,GACbxB,GACC,kBAAC8B,EAAA,EAAD,CAAYC,UAAU,MAAMtC,UAAW+B,GACpCxB,GAGJC,GACC,kBAAC6B,EAAA,EAAD,CAAYC,UAAU,IAAItC,UAAW+B,GAClCvB,EAAiBA,kBAGrBE,GACC,kBAAC6B,EAAA,EAAD,CAAQD,UAAU,IAAIE,OAAO,SAASC,IAAI,sBAAsBC,KAAMhC,EAAKA,MAAQA,EAAKA,KAAKyB,IAAK5B,MAAOG,EAAKH,MAAOP,UAAW+B,GAC9H,0BAAM/B,UAAW+B,GAAkBrB,EAAKiC,MACxC,kBAAC,EAAD,CAAU3C,UAAW+B,S,kIC9ChB,GACba,QAAS,wBACT,gBAAiB,+B,gBCMEC,E,oBAWnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,YAAa,WAHE,E,0GAOnBC,OAAA,WAAU,IAAD,EAIHC,KAAKJ,MAFPK,EAFK,EAELA,QACAC,EAHK,EAGLA,QAEMJ,EAAgBE,KAAKH,MAArBC,YACJK,EAAiBtB,EAAOa,QAI5B,OAHIb,EAAOoB,KACTE,EAAiBtB,EAAOoB,IAGxB,oCACGC,GAAWA,EAAQE,KAAI,SAACC,GAAD,OACtB,kBAAC,IAAD,CAAYC,IAAKD,EAAKhD,OACpB,kBAAC,IAAD,CAAOyC,YAAaA,EAAaS,SAAS,SACvC,SAACC,GAAD,OACC,yBAAK1D,UAAWqD,GACd,kBAAC,IAAD,CAAUK,SAAUA,EAAUD,SAAS,QACrC,kBAAC,IAAD,CAAOE,KAAM,CAAEC,QAAS,EAAGC,SAAU,IAAKC,MAAO,KAAOC,GAAI,CAAEH,QAAS,EAAGC,SAAU,EAAGC,MAAO,MAC5F,6BACE,kBAACxD,EAAA,EAAkBiD,gB,GAtCAS,aAAtBnB,EAOZxC,aAAe,CACpB8C,QAAS","file":"MobileSection-a29d7823041921b8be46.js","sourcesContent":["export default {\r\n  wrapper: 'frameworkcard-wrapper w-full relative md:w-1/3 p-20 mdl:p-30 mb-20 mdl:mb-30',\r\n  image: 'frameworkcard-image mx-auto mdl:w-3/5 w-2/3',\r\n  contentWrapper: 'frameworkcard-content mt-10 mdl:mt-30 mdl:opacity-0',\r\n  title: 'text-white font-SpartanBold mdl:text-18 text-center mb-10',\r\n  shortDescription: 'text-white px-10 font-SpartanRegular text-12 mdl:text-14 text-center mb-15',\r\n  link: 'frameworkcard-button mx-auto flex mdl:w-1/3 w-1/2 relative hover:bg-orange',\r\n  linkText: 'text-white font-SpartanMedium leading-normal text-14 w-full text-center py-5',\r\n  linkIcon: 'text-transparent w-31 h-31 fill-current absolute right-0',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Triangle = ({ className, style }) => (\r\n  <svg className={className} style={style} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\r\n    <polygon points=\"250,0 500,250 250,500\" />\r\n  </svg>\r\n);\r\n\r\nTriangle.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n};\r\n\r\nTriangle.defaultProps = {\r\n  className: 'fill-current text-black w-24 h-24',\r\n  style: {},\r\n};\r\n\r\nexport default Triangle;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classnames from '../../helpers/classnames.helper';\r\nimport Image from '../Media/Image';\r\nimport styles from './styles/FrameworkCard.twstyle';\r\nimport Typography from '../Typography/Typography';\r\nimport Button from '../Button/Button';\r\nimport Triangle from '../SVG/Triangle';\r\n\r\nconst FrameworkCard = ({\r\n  title, shortDescription, image, link,\r\n}) => {\r\n  const [isVisible, setVisible] = useState(true);\r\n  const domRef = useRef();\r\n  useEffect(() => {\r\n    if (window.innerWidth >= process.env.GATSBY_MOBILE_BREAKPOINT) {\r\n      const currentRef = domRef.current;\r\n      const observer = new IntersectionObserver((entries) => {\r\n        const entry = entries[0];\r\n        setVisible(entry.isIntersecting);\r\n      });\r\n      observer.observe(currentRef);\r\n      return () => observer.unobserve(currentRef);\r\n    }\r\n    return () => null;\r\n  }, []);\r\nreturn (\r\n  <div ref={domRef} className={classnames(styles.wrapper, isVisible ? 'in-viewport-fade' : '')}>\r\n    {image && (\r\n      <Image className={styles.image} src={image.file && image.file.url} alt={image.title} />\r\n    )}\r\n    <div className={styles.contentWrapper}>\r\n      {title && (\r\n        <Typography component=\"div\" className={styles.title}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {shortDescription && (\r\n        <Typography component=\"p\" className={styles.shortDescription}>\r\n          {shortDescription.shortDescription}\r\n        </Typography>\r\n      )}\r\n      {link && (\r\n        <Button component=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href={link.link && link.link.url} title={link.title} className={styles.link}>\r\n          <span className={styles.linkText}>{link.text}</span>\r\n          <Triangle className={styles.linkIcon} />\r\n        </Button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nFrameworkCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  shortDescription: PropTypes.object.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  link: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FrameworkCard;\r\n","export default {\r\n  default: 'w-full flex flex-wrap',\r\n  'SectionType-1': 'w-full flex flex-wrap my-30',\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller, Scene } from 'react-scrollmagic';\r\nimport { Timeline, Tween } from 'react-gsap';\r\n\r\nimport styles from './styles/MobileSection.twstyle';\r\nimport FrameworkCard from '../Card/FrameworkCard';\r\n\r\nexport default class MobileSection extends Component {\r\n  static propTypes = {\r\n    content: PropTypes.array.isRequired,\r\n    variant: PropTypes.string,\r\n    uid: PropTypes.string.isRequired,\r\n  }\r\n\r\n  static defaultProps = {\r\n    variant: '',\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      triggerHook: 'onEnter',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      variant,\r\n      content,\r\n    } = this.props;\r\n    const { triggerHook } = this.state;\r\n    let componentStyle = styles.default;\r\n    if (styles[variant]) {\r\n      componentStyle = styles[variant];\r\n    }\r\n    return (\r\n      <>\r\n        {content && content.map((item) => (\r\n          <Controller key={item.title}>\r\n            <Scene triggerHook={triggerHook} duration=\"100%\">\r\n              {(progress) => (\r\n                <div className={componentStyle}>\r\n                  <Timeline progress={progress} duration=\"100%\">\r\n                    <Tween from={{ opacity: 0, yPercent: 100, scale: '0' }} to={{ opacity: 1, yPercent: 0, scale: '1' }}>\r\n                      <div>\r\n                        <FrameworkCard {...item} />\r\n                      </div>\r\n                    </Tween>\r\n                  </Timeline>\r\n                </div>\r\n              )}\r\n            </Scene>\r\n          </Controller>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}