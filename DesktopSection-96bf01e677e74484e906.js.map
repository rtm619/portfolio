{"version":3,"sources":["webpack:///./src/components/AnimatedCardsSection/styles/DesktopSection.twstyle.js","webpack:///./src/components/AnimatedCardsSection/DesktopSection.js","webpack:///./src/components/Card/styles/FrameworkCard.twstyle.js","webpack:///./src/components/Card/FrameworkCard.js"],"names":["default","DesktopSection","content","variant","componentStyle","styles","className","map","item","FrameworkCard","key","title","defaultProps","shortDescription","image","link","useState","isVisible","setVisible","domRef","useRef","useEffect","window","innerWidth","Number","process","currentRef","current","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","observe","ref","classnames","Image","src","file","url","alt","Typography","component","Button","target","rel","href","text","Triangle"],"mappings":"+KAAe,GACbA,QAAS,wBACT,gBAAiB,+BCIbC,EAAiB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7BC,EAAiBC,EAAOL,QAI5B,OAHIK,EAAOF,KACTC,EAAiBC,EAAOF,IAGxB,yBAAKG,UAAWF,GACbF,GAAWA,EAAQK,KAAI,SAACC,GAAD,OACtB,kBAACC,EAAA,EAAD,eAAeC,IAAKF,EAAKG,OAAWH,SAW5CP,EAAeW,aAAe,CAC5BT,QAAS,IAGIF,a,uGC7BA,EACJ,yFADI,EAEN,8CAFM,EAGG,sDAHH,EAIN,4DAJM,EAKK,6EALL,EAMP,6EANO,EAOH,+IAPG,EAQH,yC,oCCsDGQ,IApDO,SAAC,GAEhB,IADLE,EACI,EADJA,MAAOE,EACH,EADGA,iBAAkBC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,KAC5B,EAC4BC,oBAAS,GAAlCC,EADH,KACcC,EADd,KAEEC,EAASC,mBAcf,OAbAC,qBAAU,WACR,GAAIC,OAAOC,YAAcC,OAAOC,OAAuC,CACrE,IAAMC,EAAaP,EAAOQ,QACpBC,EAAW,IAAIC,sBAAqB,SAACC,GACzC,IAAMC,EAAQD,EAAQ,IACjBb,GAAac,EAAMC,iBACtBd,GAAW,GACXU,EAASK,UAAUP,OAGvBE,EAASM,QAAQR,OAInB,yBAAKS,IAAKhB,EAAQb,UAAW8B,YAAW/B,EAAgBY,EAAY,mBAAqB,KACtFH,GACC,kBAACuB,EAAA,QAAD,CAAO/B,UAAWD,EAAciC,IAAKxB,EAAMyB,MAAQzB,EAAMyB,KAAKC,IAAKC,IAAK3B,EAAMH,QAEhF,yBAAKL,UAAWD,GACbM,GACC,kBAAC+B,EAAA,EAAD,CAAYC,UAAU,MAAMrC,UAAWD,GACpCM,GAGJE,GACC,kBAAC6B,EAAA,EAAD,CAAYC,UAAU,IAAIrC,UAAWD,GAClCQ,EAAiBA,kBAGrBE,GACC,kBAAC6B,EAAA,EAAD,CAAQD,UAAU,IAAIE,OAAO,SAASC,IAAI,sBAAsBC,KAAMhC,EAAKA,MAAQA,EAAKA,KAAKyB,IAAK7B,MAAOI,EAAKJ,MAAOL,UAAWD,GAC9H,0BAAMC,UAAWD,GAAkBU,EAAKiC,MACxC,kBAACC,EAAA,EAAD,CAAU3C,UAAWD","file":"DesktopSection-96bf01e677e74484e906.js","sourcesContent":["export default {\r\n  default: 'w-full flex flex-wrap',\r\n  'SectionType-1': 'w-full flex flex-wrap my-50',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FrameworkCard from '../Card/FrameworkCard';\r\nimport styles from './styles/DesktopSection.twstyle';\r\n\r\nconst DesktopSection = ({ content, variant }) => {\r\n  let componentStyle = styles.default;\r\n  if (styles[variant]) {\r\n    componentStyle = styles[variant];\r\n  }\r\n  return (\r\n    <div className={componentStyle}>\r\n      {content && content.map((item) => (\r\n        <FrameworkCard key={item.title} {...item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nDesktopSection.propTypes = {\r\n  variant: PropTypes.string,\r\n  content: PropTypes.array.isRequired,\r\n};\r\n\r\nDesktopSection.defaultProps = {\r\n  variant: '',\r\n};\r\n\r\nexport default DesktopSection;\r\n","export default {\r\n  wrapper: 'frameworkcard-wrapper w-full relative md:w-1/2 mdl:w-1/3 p-20 mdl:p-30 mb-20 mdl:mb-30',\r\n  image: 'frameworkcard-image mx-auto mdl:w-3/5 w-2/3',\r\n  contentWrapper: 'frameworkcard-content mt-10 mdl:mt-30 mdl:opacity-0',\r\n  title: 'text-white font-SpartanBold mdl:text-18 text-center mb-10',\r\n  shortDescription: 'text-white px-10 font-SpartanRegular text-12 mdl:text-14 text-center mb-15',\r\n  link: 'frameworkcard-button mx-auto flex mdl:w-1/3 w-1/2 relative overflow-hidden',\r\n  linkText: 'z-1 mdl:text-white text-black font-SpartanMedium absolute top-0 bottom-0 flex justify-center items-center leading-normal text-14 w-full py-5',\r\n  linkIcon: 'text-orange fill-current w-full h-full',\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classnames from '../../helpers/classnames.helper';\r\nimport Image from '../Media/Image';\r\nimport styles from './styles/FrameworkCard.twstyle';\r\nimport Typography from '../Typography/Typography';\r\nimport Button from '../Button/Button';\r\nimport Triangle from '../SVG/Triangle';\r\n\r\nconst FrameworkCard = ({\r\n  title, shortDescription, image, link,\r\n}) => {\r\n  const [isVisible, setVisible] = useState(false);\r\n  const domRef = useRef();\r\n  useEffect(() => {\r\n    if (window.innerWidth >= Number(process.env.GATSBY_MOBILE_BREAKPOINT)) {\r\n      const currentRef = domRef.current;\r\n      const observer = new IntersectionObserver((entries) => {\r\n        const entry = entries[0];\r\n        if (!isVisible && entry.isIntersecting) {\r\n          setVisible(true);\r\n          observer.unobserve(currentRef);\r\n        }\r\n      });\r\n      observer.observe(currentRef);\r\n    }\r\n  });\r\n  return (\r\n    <div ref={domRef} className={classnames(styles.wrapper, isVisible ? 'in-viewport-fade' : '')}>\r\n      {image && (\r\n        <Image className={styles.image} src={image.file && image.file.url} alt={image.title} />\r\n      )}\r\n      <div className={styles.contentWrapper}>\r\n        {title && (\r\n          <Typography component=\"div\" className={styles.title}>\r\n            {title}\r\n          </Typography>\r\n        )}\r\n        {shortDescription && (\r\n          <Typography component=\"p\" className={styles.shortDescription}>\r\n            {shortDescription.shortDescription}\r\n          </Typography>\r\n        )}\r\n        {link && (\r\n          <Button component=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href={link.link && link.link.url} title={link.title} className={styles.link}>\r\n            <span className={styles.linkText}>{link.text}</span>\r\n            <Triangle className={styles.linkIcon} />\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFrameworkCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  shortDescription: PropTypes.object.isRequired,\r\n  image: PropTypes.object.isRequired,\r\n  link: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FrameworkCard;\r\n"],"sourceRoot":""}